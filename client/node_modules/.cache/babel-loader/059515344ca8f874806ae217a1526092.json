{"ast":null,"code":"var _jsxFileName = \"/Users/alexdegregori/Projects/module-1/Kook-Shop/client/src/components/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TutorialDataService from \"../services/TutorialService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cart(props) {\n  _s();\n\n  // const { onAdd } = props;\n  const [products, setProducts] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    retrieveTutorials();\n  }, []);\n\n  const retrieveTutorials = () => {\n    TutorialDataService.getAll().then(response => {\n      setProducts(response.data);\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const onAdd = products => {\n    const exist = cartItems.find(x => x._id === products._id);\n\n    if (exist) {\n      setCartItems(cartItems.map(x => x._id === products._id ? { ...exist,\n        qty: exist.qty + 1\n      } : x));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cartItems.map(product => /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: cartItems.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Cart, \"uBDVSaThhHblp3zkYD+1qRyO+wQ=\");\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/alexdegregori/Projects/module-1/Kook-Shop/client/src/components/Cart.js"],"names":["React","useState","useEffect","TutorialDataService","Cart","props","products","setProducts","searchTitle","setSearchTitle","cartItems","setCartItems","retrieveTutorials","getAll","then","response","data","console","log","catch","e","onAdd","exist","find","x","_id","map","qty","product","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,iBAAiB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,iBAAiB,GAAG,MAAM;AAC/BT,IAAAA,mBAAmB,CAACU,MAApB,GACEC,IADF,CACQC,QAAD,IAAc;AACnBR,MAAAA,WAAW,CAACQ,QAAQ,CAACC,IAAV,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACA,KAJF,EAKEG,KALF,CAKSC,CAAD,IAAO;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACA,KAPF;AAQA,GATD;;AAWA,QAAMC,KAAK,GAAIf,QAAD,IAAc;AAC3B,UAAMgB,KAAK,GAAGZ,SAAS,CAACa,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUnB,QAAQ,CAACmB,GAAzC,CAAd;;AACA,QAAIH,KAAJ,EAAW;AACVX,MAAAA,YAAY,CACXD,SAAS,CAACgB,GAAV,CAAeF,CAAD,IACbA,CAAC,CAACC,GAAF,KAAUnB,QAAQ,CAACmB,GAAnB,GAAyB,EAAE,GAAGH,KAAL;AAAYK,QAAAA,GAAG,EAAEL,KAAK,CAACK,GAAN,GAAY;AAA7B,OAAzB,GAA4DH,CAD7D,CADW,CAAZ;AAKA;AACD,GATD;;AAWA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAA,gBACEd,SAAS,CAACgB,GAAV,CAAeE,OAAD,iBACd;AAAA,kBAAKlB,SAAS,CAACmB;AAAf;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GA3CuBzB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TutorialDataService from \"../services/TutorialService\";\n\nexport default function Cart(props) {\n\t// const { onAdd } = props;\n\tconst [products, setProducts] = useState([]);\n\tconst [searchTitle, setSearchTitle] = useState(\"\");\n\tconst [cartItems, setCartItems] = useState([]);\n\n\tuseEffect(() => {\n\t\tretrieveTutorials();\n\t}, []);\n\n\tconst retrieveTutorials = () => {\n\t\tTutorialDataService.getAll()\n\t\t\t.then((response) => {\n\t\t\t\tsetProducts(response.data);\n\t\t\t\tconsole.log(response.data);\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t});\n\t};\n\n\tconst onAdd = (products) => {\n\t\tconst exist = cartItems.find((x) => x._id === products._id);\n\t\tif (exist) {\n\t\t\tsetCartItems(\n\t\t\t\tcartItems.map((x) =>\n\t\t\t\t\tx._id === products._id ? { ...exist, qty: exist.qty + 1 } : x\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Products</h2>\n\n\t\t\t<div>\n\t\t\t\t{cartItems.map((product) => (\n\t\t\t\t\t<h3>{cartItems.name}</h3>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}